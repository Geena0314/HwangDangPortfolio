<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="buyMapper">

	<!-- 상품, 판매자, Option 1:1:1조인 -->
	<select id="selectProductSellerOptionJoin" resultMap="productMapper.product-seller-productImage-join" parameterType="map">
		select 	p.product_Id, p.product_name, p.product_price, p.product_stock, p.product_main_image, p.product_info, p.product_like, p.seller_store_no, 
			  		s.seller_store_no, s.seller_store_name, s.seller_tax_id, s.seller_industry, s.seller_sub_industry, s.seller_zipcode, s.seller_address, 
			   		s.seller_sub_address, s.seller_store_image, s.seller_product1, s.seller_product2, s.seller_product3, s.seller_introduction, s.seller_assign, s.member_id,
			   		po.option_id, po.option_name, po.option_sub_name, po.option_stock, po.option_add_price, po.product_id
		from   	product p, seller s, product_option po 
		where  	p.seller_store_no = s.seller_store_no
		and	   	p.product_id = #{productId}
		and    	p.product_id = po.product_id
		and		po.option_id = #{optionId}
	</select>
	
	<!-- 주문상품 등록 -->
	<insert id="insertOrderProduct" parameterType="orderProduct">
		<selectKey keyProperty="orderSeqNo" resultType="_int" order="BEFORE">
			select order_seq_no_seq.nextval from dual
		</selectKey>
		INSERT INTO order_product
		VALUES (#{orderSeqNo}, #{orderAmount}, #{ordersNo}, #{productId}, #{optionId}, #{sellerStoreNo}, #{orderProductStatus})
	</insert>
	
	<!-- 주문정보 등록 -->
	<insert id="insertOrders" parameterType="orders">
		INSERT INTO orders 
		VALUES ( 
		 #{ordersNo },#{ordersReceiver },#{ordersPhone },#{ordersZipcode },
		 #{ordersAddress },#{ordersSubAddress },#{ordersTotalPrice },#{ordersPayment },
		 #{ordersRequest },#{paymentStatus },#{ordersDate },#{memberId }
		)
	</insert>
	
	<!-- 주문번호로 주문내역 검색 -->
	<select id="selectDiliveryStatusByOrderNo" resultMap="orderMapper.dilivery-resultMap" parameterType="string">
		select 		o.orders_no, o.payment_status, o.orders_date,
						op.order_seq_no, op.order_amount, op.order_product_status, 
						p.product_Id, p.product_name, p.product_price, p.product_main_image,
						s.seller_store_no, s.seller_store_name, s.seller_store_image,
						po.option_sub_name, po.option_add_price
		from 			orders o, order_product op, product p, seller s, product_option po
		where 		o.orders_no = op.orders_no
		and	 		op.product_id = p.product_id
		and			op.option_id = po.option_id
		and			op.seller_store_no = s.seller_store_no 
		and			o.orders_no = #{ordersNo}
	</select>
</mapper>